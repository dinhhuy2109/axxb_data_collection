<?xml version="1.0"?>
<launch>
  <!-- requires ikea assembly package- master -->
  <!-- launch file parameters -->
  <arg name="namespace"     default="left" />
  <arg name="grid_spacing"  default="15.94" />
  <arg name="samples"       default="50" />
  <arg name="pausetime"     default="1.0" />
  <arg name="debug"         default="True" />
  <arg name="stepsize"      default="0.05"/> <!-- meters-->
  <arg name="axis"          default="0"/>
  <arg name="esttranserr"   default="True"/>
  <arg name="rot_element"   default="0"/>
  <arg name="min_value"     default="0"/> <!-- indicate the left bound
  of the samples eg. min_value = -2 -> the prog will sample 2 poses on
  the opposite direction (-=) -->
  <!-- Camera driver configuration at start -->
  <node name="driver_dynconfig" pkg="dynamic_reconfigure" type="dynparam" args="set_from_parameters ensenso_driver" ns="camera">
    <!-- Capture parameters -->
    <param name="FrontLight"        type="bool"   value="false" />
    <param name="Projector"         type="bool"   value="false" />
    <param name="TargetBrightness"  type="int"    value="70" />
    <!-- Streaming parameters -->    
    <param name="Cloud"   type="bool"   value="false" />
    <param name="Images"  type="bool"   value="true" />
  </node>
  
  <!-- Image view -->
  <node name="left_image_view" pkg="image_view" type="image_view">
    <remap from="image" to="/camera/left/image_raw" />
  </node>
  
  <!-- Joint trajectory controller -->
  <include file="$(find denso_control)/launch/joint_trajectory_controller.launch">
    <arg name="namespace" value="$(arg namespace)"/>
  </include>
  
  <!-- camera-robot calibration script -->
  <node name="error_collection" pkg="axxb_data_collection" type="error_collection.py" output="screen" required="True">
    <param name="robot_name"    type="string" value="$(arg namespace)" />
    <param name="debug"         type="bool"   value="$(arg debug)"/>
    <param name="grid_spacing"  type="double" value="$(arg grid_spacing)" />
    <param name="pausetime"     type="double" value="$(arg pausetime)"/>
    <param name="samples"       type="int"    value="$(arg samples)"/>
    <param name="stepsize"      type="double" value="$(arg stepsize)"/> <!-- meters -->
    <param name="axis"          type="int"    value="$(arg axis)"/>
    <!-- XAXIS = 0, YAXIS = 1, ZAXIS = 2 -->
    <param name="esttranserr"   type="bool"   value="$(arg esttranserr)"/>
    <param name="rot_element"   type="int"    value="$(arg rot_element)"/>
    <!-- 0: first element of so3 Rotation, 1: second, 2: third -->
    <param name="min_value"     type="int"    value="$(arg min_value)"/>

  </node>
</launch>
